x-> Projects -> Vim as a file system browser
The idea: vim should be able to browse all of the file system.

- [x] When typing ef on some word it goes to that file or folder. If it's a
      folder it opens _ there, if it's a file it opens that file.
- [ ] format *header* beautifully
- [x] the path should be added at the top of each window (requires patching)
- [ ] find some beautiful replacement for asterisks for denoting the files. It
      could be vertical pipes
- [ ] reassign the control keys to something more intuitive and more accessible,
      including quit key
- [x] make every note be read as an .md file
- [x] when searching for a keyword exclude the dot files
- [x] when searching for a keyword and clicking ESC it cancels without going
      anywhere
- [ ] make a command for going forward in history
- [x] make it open the context of cword file inside the current note, just below
      the cursor
- [ ] make a client for *accessing* a remote note system based on vim
- [ ] refine in some way the idea you did: separate `note` for client and `note`
      for server
- [ ] make two possible ways of starting `note` on client side: remotely and
      locally
- [ ] make an *android_client* for accessing a remote note system
- [ ] make a *web_client* for vinote
- [x] make the possibility to display site's titles based on links in the file
- [ ] add a hotkey for hiding the title
- [ ] add an autocommand for displaying all link's titles in a buffer right
      after load
- [ ] add a separate function for removing the root of any note path
- [x] move the plugin into the directory for plugins (and write a Makefile or
      installation script)
- [x] move the history of movements into ~/.cache/vinote directory
- [x] break the code into several files: one of them should be config, another
      one for general functions, and another one for fundamental functions
- [x] replace the on_key() in popup_window_create() by assigning to a global
      variable which type of window it is(popup_menu), which can be used by a
      separate function in if statement if window_type == "popup_menu" and key
      == "\r" then close the window and buffer
- [x] on_key() function is assigned on startup
- [x] make a hotkey for local search rather than recursive
- [x] listing through notes inside current note
- [ ] jumping through notes links inside the current buffer
- [x] add the search for the note by a file, not text feature with `find`
- [ ] make config.lua richer for configuration
- [x] add header that shows where you are
- [x] write the real text under header
- [x] make ESC go level_up() if in nomal mode, and Enter go_to_note(cword) if in
      normal mode
- [ ] if the cursor is between two stars Enter acts like go_to_note() where it
      reads the whole string between the stars, including spaces and converting
      them to underscores
- [x] if opening another instance of vinote kill the previous one
- [ ] *vinote_mode*
- [x] put the functions into tables which are named after the files they are
      defined at
- [ ] write a decent documentation in manpages
- [ ] write documentation in html
- [ ] write a couple of tutorials in web concerning vinote both using and
      setting up, e.g. setting up web server with it
- [ ] batch moving of notes

Notion: 
- [x] while editing notes it saves repeatedly. 
- [x] After each session it saves the path to the note where have you been
      last time, so that it opens it again in the next session. 
- [x] Also make it be able to rename the notes, e.g. folder names by changing
      the word inside the note. It can be done by typing something like ciw, but
      its alternative, then, you type the new word, and after pressing Esc it
      reads the word and renames the folder to it.
- [x] Also, make a function for searching for patterns throughout the note
      system, it can be done with the help of ack or grep -R.
- [x] And make the notes be able to open the child note inside the current note.
- [x] Make the notes be able to open multiple and all child notes in the current
      one.
- [x] Make it possible to collaps the expanded notes.
- [x] Make the possibility to insert links inside the notes
- [x] Make the possibility to move some notes inside others
- [x] add "home", and "go back by history" keys
- [ ] if some folder doesn't have any text in _ delete it automatically when
      moving somewhere else
- [x] restore textwidth
- [x] make Rename() function remove the current directory after
      popup_filter_yes_no if it currently exists before inserting new one
- [ ] make a schedule folder where it moves some tasks to the *../../today* folder
      if the proper time came, or the reminders field, perhaps at the top of the
      home page.
- [ ] make *dynamic_tables*
- [x] make a link function that works with `ln` command
- [x] implement logging system
- [ ] write tests
- [x] make it write motion history specifying paths starting with the notion
      root
- [x] restrict opening an another instance of `note`
- [x] make a hotkey for completeng the task (adding the 'x' between '[ ]')
- [ ] make the sorting of todo lists feature so that it can show non-done tasks
      first
- [x] remove headers from searching list
- [ ] integrate git into vinote where the messages are named by the current
      date, and the frequency of automatic making commits is set by an
      environment variable.
- [x] replace spaces with _ when searching for a file
- [ ] when entering the words between stars it converts spaces to underscores
- [ ] adding of the tasks made easier with `o- [ ] ` and leaving you in insert
      mode
- [ ] SQL integration, where some table is read from SQL table, written in a
      buffer of vinote, and uploaded back to SQL when edited/exited of the note
- [ ] *try_to_replicate*
- [ ] *spaced_repetition_timer*
- [ ] *instant_navigation*
- [ ] *setting_note_metadata*
- [ ] make searching recursively based on /current_branch rather than /
- [ ] more convenient *way_of_creating_a_new_note*
- [ ] quick *logging*
- [ ] *quick_note*
- [ ] make vinote not close another instance of vinote and *not_conflict* with
      it by history
- [ ] make the possibilty to write rules for notes, e.g. the content of /today
      clears every evening

## issues
- [x] link() function fails
- [x] go_home function fails, error: attempt to concatenate path=nil
- [x] searching through the buffer after recursive search doesn't work
- [ ] unable to set cursor pos to the first line after searching
- [x] make the header appear above the first line
- [x] nvim fails on newly created notes because of add_header() function
- [x] when adding a header above the first line and the line contains # or some
      other symbol that adds automatically it adds there too.
- [x] when searching by text it attempts to create a new folder
- [x] when searching by text and click ESC it replaced current row by the
      current file's header.
- [x] when searching not in home directory and clicking ESC it goes levelup
      relatively to the current note
- [x] when searching for a file it attempts to create a new note at root
- [x] when clicking enter on some note it attempts to close some window instead
      of going anywhere
- [ ] when searching by text the cursor doesn't move to that keyword

File browser: 
- [ ] while edititng files it should be saved explicitly, but when not
      saved then go back forcefully or not. There should be two commands for
      both.
- [ ] And when opening some directory there should be notes at the top, followed
      by a line of -'s, then a couple of lines containing single dots, then the
      same line with -'s, and the list of files in the directory. The list of
      files with the header isn't contained in the _ file, instead it's placed
      there temporarily, which is cleared with each :w command, and written with
      each directory opening.
- [ ] If the line after the header is edited then don't clear that particular
      line.  To determine whether it's edited or not the amount of words in the
      line could be compared. If it's 1 then the line is not edited, if more
      then it is and should be written to the file. Just move it right before
      the header before saving.
- [ ] When opening a directory it should open a file called _ that is a
      directory description, it contains short notes and the directory
      description.
     
*file_browser_example*
